notes
.account-header
  div(row)
    div(column='5')
      h1 Account Dashboard
    div(column='7')
      .market-overview.expanded(ng-class="{'visible': a.overviewOpen}")
        //-.overview -- leaving this in incase we change our minds and want it back
          label My Accounts
          label On- &amp; Off-Premise
        .brands
          p(ng-if="!a.brandWidgetSkuTitle") {{a.brandWidgetTitle}}
          p {{a.brandWidgetSkuTitle}}
        .market
          p(ng-if="a.selectedStore || a.selectedDistributor")
            <span ng-if="a.selectedDistributor">{{a.selectedDistributor}}</span><span ng-if="a.selectedStore && a.selectedDistributor"> - </span><span ng-if="a.selectedStore">{{a.selectedStore}}</span> <span ng-if="a.currentTopBottomFilters.stores.id"> {{a.getStoreAddress();}}</span>
          p(ng-if="!a.selectedStore && !a.selectedDistributor") {{a.currentTopBottomAcctType.name || a.accountTypesDefault}}
        md-progress-circular(ng-if="a.selectedStore && a.loadingUnsoldStore" md-mode="indeterminate" md-diameter="20")
        .notes-icon(ng-class="{'enabled': a.canOpenNote()}" ng-click="a.openNotes(true, a.selectedStoreInfo)")
          p <a href="#"></a>
      .market-overview.clearfix
        .brands
          p(ng-if="!a.brandWidgetSkuTitle") {{a.brandWidgetTitle}}
          p {{a.brandWidgetSkuTitle}}
        .market
          p(ng-if="a.selectedStore || a.selectedDistributor")
            <span ng-if="a.selectedDistributor">{{a.selectedDistributor}}</span><span ng-if="a.selectedStore && a.selectedDistributor"> - </span><span ng-if="a.selectedStore">{{a.selectedStore}}</span> <span ng-if="a.currentTopBottomFilters.stores.id"> {{a.getStoreAddress();}}</span>
          p(ng-if="!a.selectedStore && !a.selectedDistributor") {{a.currentTopBottomAcctType.name || a.accountTypesDefault}}
        md-progress-circular(ng-if="a.selectedStore && a.loadingUnsoldStore" md-mode="indeterminate" md-diameter="20")
        .notes-icon(ng-class="{'enabled': a.canOpenNote()}" ng-click="a.openNotes(true, a.selectedStoreInfo)")
          p <a href="#">Notes</a>


.filters.top(column='12')
  div(row)
    //- div.trend(column='2')
      label Trend
      md-radio-group(ng-model="a.filterModel.trend")
        md-radio-button(ng-repeat="filter in a.filtersService.model.trend" class="md-primary" ng-value="filter" aria-label="Trend" ng-if = "a.checkForStoreLevel(filter)" ng-click="a.trendOptionChanged(filter); a.disableApplyFilter(false);") {{filter.name}}
    div(column='4')
      label Ending Time Period
      md-radio-group(ng-model="a.filterModel.endingTimePeriod")
        md-radio-button(ng-repeat="filter in a.filtersService.model.timePeriod track by $index" class="md-primary" ng-value="filter.value" aria-label="Ending Time Period" ng-click="a.updateDistributionTimePeriod(filter.value); a.disableApplyFilter(false);") {{filter.name}}
    div(column='8')
      div(row).dropdown-filter.dashboard-filter
        div(column='6').dropdown
          label Depletions Time Period
          md-select(ng-model="a.filterModel.depletionsTimePeriod" md-on-open="a.openSelect(true); a.depletionSelectOpen = true" md-on-close="a.openSelect(false); a.depletionSelectOpen = false" aria-label="Select a depletion time period" ng-model-options="{trackBy: '$value.id'}")
            md-option(ng-repeat="filter in a.filtersService.model.depletionsTimePeriod[a.filterModel.endingTimePeriod]" aria-label="{{filter.name}}" ng-value="filter" ng-click="a.depletionOptionChanged(filter); a.disableApplyFilter(false);")
              div {{filter.displayValue}}
              div.dropdown-subtext(ng-if="a.depletionSelectOpen") {{filter.displayValue !== "Clo Mth" ? a.dateRanges[filter.name] : a.dateRanges['CMTH']}}
          p.dropdown-subtext {{a.filterModel.depletionsTimePeriod.displayValue !== "Clo Mth" ? a.dateRanges[a.filterModel.depletionsTimePeriod.displayValue] : a.dateRanges['CMTH']}}
        div(column='6').dropdown
          label Distribution Time Period
          md-select(ng-model="a.filterModel.distributionTimePeriod" md-on-open="a.openSelect(true); a.distributionSelectOpen = true" md-on-close="a.openSelect(false); a.distributionSelectOpen = false" aria-label="Select a distribution time period")
            md-option(ng-repeat="filter in a.filtersService.model.distributionTimePeriod[a.filterModel.endingTimePeriod]" aria-label="{{filter.name}}" ng-value="filter" ng-click="a.distOptionChanged(filter); a.disableApplyFilter(false);")
              div {{filter.displayCode}}
              div.dropdown-subtext(ng-if="a.distributionSelectOpen") {{a.dateRanges[filter.displayCode]}}
          p.dropdown-subtext {{a.dateRanges[a.filterModel.distributionTimePeriod.displayCode]}}

.filters(column='12')
  div(row)
    div(column='2')
      label Account Scope
      md-checkbox(ng-model="a.filtersService.model.selected.myAccountsOnly" aria-label="My Accounts" ng-click="a.updateChip('My Accounts Only', 'myAccountsOnly');" ng-change="a.setUserSpecificModels();") My Accounts Only

    div(column='2')
      .tooltip-wrap
        label Premise Type
        .tooltip
          img(src="../../assets/img/icons/help-tooltip.svg")
          md-tooltip(md-direction="bottom")
            label Filter Set
            h3 Premise Type
            p Premise type classification as provided by TDLinx.
            p "All" contains Off-Premise, On-Premise, Non Retail, and Unknown (if applicable).
      md-radio-group(ng-model="a.premiseTypeValue")
        md-radio-button(ng-repeat="p in a.filtersService.model.premises track by $index" class="md-primary" ng-value="p.value" aria-label="{{p.name}}" ng-click="a.updateChip(p.name, 'premiseType')" ng-disabled="a.premiseTypeDisabled") {{p.name}}
    div(column='2')
      label Distributor
      inline-search(type="distributor" placeholder="Name" chosen-result="a.filtersService.model.distributor" callback="a.setFilter(result, 'distributor')" removable='true' on-remove="a.removeInlineSearch('selectedDistributor')" show-x='a.showXDistributor')
    div(column='2')
      .tooltip-wrap
        label Store Type
          .tooltip
            img(src="../../assets/img/icons/help-tooltip.svg")
            md-tooltip(md-direction="bottom")
              label Filter Set
              h3 Store Type
              p Chain = Chain retailers directly called on by CBBD National or Key Accounts teams (On and Off-Premise)
              p Independent = Retailers not directly called on by CBBDâ€™s National or Key Accounts teams
      md-checkbox(ng-model="a.filtersService.model.cbbdChainIndependent" aria-label="Independent" ng-change="a.chipsService.applyFilterArr(a.filtersService.model.selected.cbbdChain, 'Independent', 'cbbdChain'); a.disableApplyFilter(false)" ng-disabled="a.disableStoreType()") Independent
      md-checkbox(ng-model="a.filtersService.model.cbbdChainCbbd" aria-label="CBBD Chain" ng-change="a.chipsService.applyFilterArr(a.filtersService.model.selected.cbbdChain, 'Cbbd', 'cbbdChain', 'CBBD Chain'); a.disableApplyFilter(false)" ng-disabled="a.disableStoreType()") CBBD Chain
    div(column='4')
      label Retailer
      div(row).retailer.dropdown-filter
        div(column='4').dropdown
          md-select(ng-model="a.filtersService.model.selected.retailer" placeholder="Chain" ng-init="a.filtersService.model.selected.retailer = 'Chain'")
            md-option(ng-repeat="type in a.filtersService.model.retailer" ng-click="a.placeholderSelect(type.hintText)" aria-label="{{type.name}}" value="{{type.name}}") {{::type.name}}
        div(column='8')
          inline-search(ng-show="a.filtersService.model.selected.retailer === 'Store'" type="store" placeholder="{{a.hintTextPlaceholder}}" chosen-result="a.filtersService.model.store" show-address="true" callback="a.setFilter(result, 'store')" removable='true' on-remove="a.removeInlineSearch('selectedStore')" show-x="a.showXStore")
          inline-search(ng-show="a.filtersService.model.selected.retailer === 'Chain'" type="chain" placeholder="{{a.hintTextPlaceholder}}" chosen-result="a.filtersService.model.account" callback="a.setFilter(result, 'account')" removable='true' on-remove="a.removeInlineSearch('selectedStore')" show-x="a.showXChain")
  div(row)
    div(column='12' class='apply-filters')
      button(value='Apply Filters' type="button" class="btn-action" ng-disabled="a.disableApply" ng-click="a.filterTopBottom();") Apply Filters
      .secondary-button-container.reset-only
        a(ng-click="a.resetFilters()").accent.reset-icon Reset

div(row)
  //- Brands
  div.scorecard-table.scorecard-table-accounts(column='6')
    .loader-wrap.inline(ng-if="a.loadingBrandSnapshot" ng-class="{'active': a.loadingBrandSnapshot}")
      loader
    .section-header
      span
        label.accent Snapshot
    .brand-header
      div.brand-name-section
        span.back-chevron(ng-if="a.brandSelectedIndex === 1" ng-click="a.switchToBrandView()")
        p.brands {{a.brandWidgetSkuTitle || a.brandWidgetTitle}}
      div.dropdown-section
        .dropdown-filter
          md-select.dropdown-options(ng-model="a.filtersService.model.accountSelected.accountBrands" md-on-open="a.openSelect(true)" md-on-close="a.openSelect(false);" aria-label="Account Brands Filter" placeholder="Distribution (simple)")
            md-option(ng-repeat="filter in a.filtersService.accountFilters.accountBrands" ng-if="!a.removeDistOptionsBasedOnView(filter, true)" aria-label="{{filter.name}}" ng-value="filter"  ng-click="a.changeBrandSnapshotCategory(filter)") {{filter.name}}
    .widget-content
      table.depletions-table(cellspacing="0" cellpadding="0")
        thead
          tr
            th.top.title-col.brand-name-column
              p.accent.bold.left.single-line
                span(ng-show="!a.brandIdSelected") Brand
                span(ng-show="a.filtersService.model.selected.premiseType === 'all' && a.brandIdSelected") SKU / Package
                span(ng-show="a.filtersService.model.selected.premiseType === 'off' && a.brandIdSelected") SKU
                span(ng-show="a.filtersService.model.selected.premiseType === 'on' && a.brandIdSelected") Package
            th(colspan=2).top.dark.other-columns
              p.accent.bold Depletions
            th(colspan=2).top.other-columns
              p.accent
                |{{a.filtersService.model.accountSelected.accountBrands.depletionTableHeaderText}}
          tr
            th
              p.accent &nbsp;
            th.dark
              p.accent.no-transform {{a.filterModel.depletionsTimePeriod.displayValue}}
            th.dark
              p.accent {{a.filterModel.trend.name + '%'}}
            th
              p.accent {{a.filterModel.distributionTimePeriod.displayValue}}
            th
              p.accent {{a.filterModel.trend.name + '%'}}
        tbody
          tr
            td.column-total.title-col.left TOTAL
            //-  Depletion value
            td.dark.depletions-value {{a.displayBrandValue(a.currentTotalsObject.measures, 'depletions', 'depletionsTimePeriod') | number:0 }}

            //- Depletion Trend
            td(ng-class="a.getClassBasedOnValue(a.getTrendValues(a.currentTotalsObject.measures, 'depletions', 'depletionsTimePeriod').value)") <span ng-bind="a.getTrendValues(a.currentTotalsObject.measures, 'depletions', 'depletionsTimePeriod').displayValue"></span>

            //- Velocity Value
            td(ng-if="a.isDisplayBrandSnapshotRow(a.filtersService.accountFilters.accountBrandEnum.velocity, false, false)") {{a.displayBrandValue(a.currentTotalsObject.measures, 'velocity', 'distributionTimePeriod') | number:0 }}

            //- Velocity Trend
            td(ng-if="a.isDisplayBrandSnapshotRow(a.filtersService.accountFilters.accountBrandEnum.velocity, false, false)" ng-class="a.getClassBasedOnValue(a.displayBrandValue(a.currentTotalsObject.measures, 'velocityTrend', 'distributionTimePeriod'))") <span ng-if="a.checkIfVelocityPresent(a.currentTotalsObject)">{{a.displayBrandValue(a.currentTotalsObject.measures, 'velocityTrend', 'distributionTimePeriod') | number:1}}%</span><span ng-if="!a.displayBrandValue(a.currentTotalsObject.measures, 'velocityTrend', 'distributionTimePeriod')">-</span>

            //- Distirbution value Simple
            td(ng-if="a.isDisplayBrandSnapshotRow(a.filtersService.accountFilters.accountBrandEnum.distirbutionSimple)") {{a.displayBrandValue(a.currentTotalsObject.measures, 'distributionsSimple', 'distributionTimePeriod') | number:0 }}
            td(ng-if="!a.isDisplayBrandSnapshotRow(a.filtersService.accountFilters.accountBrandEnum.distirbutionSimple, true)") <span>-</span>

            //- Distirbution value Effective
            td(ng-if="a.isDisplayBrandSnapshotRow(a.filtersService.accountFilters.accountBrandEnum.distirbutionEffective)") {{a.displayBrandValue(a.currentTotalsObject.measures, 'distributionsEffective', 'distributionTimePeriod') | number:0 }}
            td(ng-if="!a.isDisplayBrandSnapshotRow(a.filtersService.accountFilters.accountBrandEnum.distirbutionEffective, true)") <span>-</span>

            //- Distirbution Trend Simple
            td(ng-class="a.getClassBasedOnValue(a.getTrendValues(a.currentTotalsObject.measures, 'distributionsSimple', 'distributionTimePeriod').value)" ng-if="a.isDisplayBrandSnapshotRow(a.filtersService.accountFilters.accountBrandEnum.distirbutionSimple)") <span ng-bind="a.getTrendValues(a.currentTotalsObject.measures, 'distributionsSimple', 'distributionTimePeriod').displayValue"></span>
            td(ng-if="!a.isDisplayBrandSnapshotRow(a.filtersService.accountFilters.accountBrandEnum.distirbutionSimple, true)") <span>-</span>

            //- Distirbution Trend Effective
            td(ng-class="a.getClassBasedOnValue(a.getTrendValues(a.currentTotalsObject.measures, 'distributionsEffective', 'distributionTimePeriod').value)" ng-if="a.isDisplayBrandSnapshotRow(a.filtersService.accountFilters.accountBrandEnum.distirbutionEffective)") <span ng-bind="a.getTrendValues(a.currentTotalsObject.measures, 'distributionsEffective', 'distributionTimePeriod').displayValue"></span>
            td(ng-if="!a.isDisplayBrandSnapshotRow(a.filtersService.accountFilters.accountBrandEnum.distirbutionEffective, true)") <span>-</span>

      md-tabs(md-selected="a.brandSelectedIndex" ng-class="{'animate-disabled': a.disableAnimation}" md-dynamic-height)
        //-md-tab(ng-repeat="brand in a.userService.model.brandPerformance track by $index" label="{{brand.name}}")
        md-tab(ng-repeat="(key, data) in a.brandTabs" label="{{key}}")
          table.depletions-table.fixed-layout(cellspacing="0" cellpadding="0")
            tbody
              tr.clickable(ng-repeat="item in data | filter: {type: '!Total'} | orderBy:'name' track by $index" ng-show="a.checkForDepOrDistValue(item)" ng-click="a.selectItem('brands', item, a.brandTabs, $parent.$index)" ng-class="{selected: item.id === a.currentBrandSkuSelected.id}")
                td.left.data-brand.title-col {{item.name}}
                //-  Depletion value
                td.dark.depletions-value {{a.displayBrandValue(item.measures, 'depletions', 'depletionsTimePeriod') | number:0 }}

                //- Depletion Trend
                td(ng-class="a.getClassBasedOnValue(a.getTrendValues(item.measures, 'depletions', 'depletionsTimePeriod').value)") <span ng-bind="a.getTrendValues(item.measures, 'depletions', 'depletionsTimePeriod').displayValue"></span>

                //- Velocity value
                td(ng-if="a.isDisplayBrandSnapshotRow(a.filtersService.accountFilters.accountBrandEnum.velocity, false, false)") {{a.displayBrandValue(item.measures, 'velocity', 'distributionTimePeriod') | number:0 }}

                //- Velocity Trend
                td(ng-if="a.isDisplayBrandSnapshotRow(a.filtersService.accountFilters.accountBrandEnum.velocity, false, false)"  ng-class="a.getClassBasedOnValue(a.displayBrandValue(item.measures, 'velocityTrend', 'distributionTimePeriod'))") <span ng-if="a.checkIfVelocityPresent(item)">{{a.displayBrandValue(item.measures, 'velocityTrend', 'distributionTimePeriod') | number:1}}%</span><span ng-if="!a.displayBrandValue(item.measures, 'velocityTrend', 'distributionTimePeriod')">-</span>

                //- Distirbution value Simple
                td(ng-if="a.isDisplayBrandSnapshotRow(a.filtersService.accountFilters.accountBrandEnum.distirbutionSimple)") {{a.displayBrandValue(item.measures, 'distributionsSimple', 'distributionTimePeriod') | number:0 }}
                td(ng-if="!a.isDisplayBrandSnapshotRow(a.filtersService.accountFilters.accountBrandEnum.distirbutionSimple, true)") <span>-</span>

                //- Distirbution value Effective
                td(ng-if="a.isDisplayBrandSnapshotRow(a.filtersService.accountFilters.accountBrandEnum.distirbutionEffective)") {{a.displayBrandValue(item.measures, 'distributionsEffective', 'distributionTimePeriod') | number:0 }}
                td(ng-if="!a.isDisplayBrandSnapshotRow(a.filtersService.accountFilters.accountBrandEnum.distirbutionEffective, true)") <span>-</span>

                //- Distirbution Trend Simple
                td(ng-class="a.getClassBasedOnValue(a.getTrendValues(item.measures, 'distributionsSimple', 'distributionTimePeriod').value)" ng-if="a.isDisplayBrandSnapshotRow(a.filtersService.accountFilters.accountBrandEnum.distirbutionSimple)") <span ng-bind="a.getTrendValues(item.measures, 'distributionsSimple', 'distributionTimePeriod').displayValue"></span>
                td(ng-if="!a.isDisplayBrandSnapshotRow(a.filtersService.accountFilters.accountBrandEnum.distirbutionSimple, true)") <span>-</span>

                //- Distirbution Trend Effective
                td(ng-class="a.getClassBasedOnValue(a.getTrendValues(item.measures, 'distributionsEffective', 'distributionTimePeriod').value)" ng-if="a.isDisplayBrandSnapshotRow(a.filtersService.accountFilters.accountBrandEnum.distirbutionEffective)") <span ng-bind="a.getTrendValues(item.measures, 'distributionsEffective', 'distributionTimePeriod').displayValue"></span>
                td(ng-if="!a.isDisplayBrandSnapshotRow(a.filtersService.accountFilters.accountBrandEnum.distirbutionEffective, true)") <span>-</span>

  //- Top Bottom Section Starts
  div.scorecard-chart(column='6')
    .loader-wrap.inline(ng-if="a.loadingTopBottom === true" ng-class="{'active': a.loadingTopBottom}")
      loader
    .loader-wrap.inline.error(ng-if="a.loadingTopBottom === 'error'" ng-class="{'active': a.loadingTopBottom}")
    .section-header.header-selector.label.accent
      md-select.top-bottom(ng-model="a.filtersService.model.valuesVsTrend" md-on-open="a.openSelect(true)" md-on-close="a.openSelect(false)" placeholder="Top 30 (Values)" aria-label="Values versus Trends Filter")
        md-option(ng-repeat="filter in a.filtersService.accountFilters.valuesVsTrend track by filter.value" ng-if="!a.isStoreLevel || filter.value <= a._topPerformersThreshold" aria-label="{{filter.name}}" ng-value="filter" ng-click="a.changeTopBottomSortOrder(filter)") {{filter.name}}
      md-select.account-entity(ng-model="a.currentTopBottomAcctType" md-on-open="a.openSelect(true)" md-on-close="a.openSelect(false);"  placeholder="{{a.currentTopBottomAcctType.name}}" aria-label="Account Type Filter")
        md-option(ng-repeat="filter in a.filtersService.accountFilters.accountTypes track by filter.value" ng-if="filter.value !== a.filtersService.accountFilters.accountTypesEnums.stores || a.filtersService.model.valuesVsTrend.value <= a._topPerformersThreshold" aria-label="{{filter.name}}" ng-value="filter" ng-click="a.setTopBottomAcctTypeSelection(filter)") {{filter.name}}
      span.light For &nbsp;
      span {{ (a.selectedStore || a.selectedDistributor || a.topLevelForLabel) | truncateText:30 }}

    //- Top Bottom Header
    .widget-header
      .dropdown-filter.narrow
        md-select(ng-model="a.filtersService.model.accountSelected.accountMarkets" md-on-open="a.openSelect(true)" md-on-close="a.openSelect(false)" aria-label="Account Markets Filter")
          md-option(ng-repeat="filter in a.filtersService.accountFilters.accountMarkets" aria-label="{{filter.name}}" ng-value="filter" ng-click= "a.acctMarketChanged(filter)" ng-if="!a.removeDistOptionsBasedOnView(filter, false)") {{filter.name}}
      .header-selector
        span.back-chevron(ng-if="a.canNavPrevLevel" ng-click="a.navPrevLevelInTopBottom()")
        p.brands.market {{ (a.selectedStore || a.selectedDistributor || a.currentTopBottomObj.currentLevelName.toUpperCase()) | truncateText:20 }}

    //- Top Bottom Subheader
    .widget-subheader
      .widget-subheader-item
        p.accent.bold.left {{a.currentTopBottomObj.currentLevelName}}
        p.accent.bold &nbsp;
      .widget-subheader-item.text-center
        p.accent.bold {{a.filtersService.model.accountSelected.accountMarkets.name}}
        p.accent.bold {{ a.filtersService.model.accountSelected.accountMarkets.propertyName === 'depletions' ? a.filterModel.depletionsTimePeriod.displayValue : a.filterModel.distributionTimePeriod.displayValue }}
      .widget-subheader-item.text-center
        p.accent.bold Trend ({{a.filterModel.trend.name}}%)
        p.accent.bold {{ a.filtersService.model.accountSelected.accountMarkets.propertyName === 'depletions' ? a.filterModel.depletionsTimePeriod.displayValue : a.filterModel.distributionTimePeriod.displayValue }}

    //- Top Bottom Content
    .widget-content.clearfix
      .widget-data
        .widget-row-container.no-outline(
          ng-repeat="(index, data) in a.topBottomData[a.accountTypeValues[a.currentTopBottomAcctType.name]].timePeriodFilteredData"
          label="{{key}}"
          ng-click="a.navigateTopBottomLevels(a.getAccountTypePerformanceData(index))"
          ng-class="a.isHighlightStore(a.getAccountTypePerformanceData(index)) === true ? 'selected' : ''"
        )
          .widget-data-row
            .widget-data-left
              p.dist-label.data-brand {{data.title}}<span ng-if="a.isStoreLevel && a.getAccountTypePerformanceData(index).storeNumber && a.getAccountTypePerformanceData(index).storeNumber !== 'UNKNOWN'">&nbsp;{{'#' + a.getAccountTypePerformanceData(index).storeNumber}}</span>
            .widget-data-right
              p.dark.text-center {{a.getValueBoundForAcctType(data.measure)}}
      .widget-graph
        .graph-container(ng-repeat="data in a.currentChartData")
          nvd3(options="a.chartOptions" data="data")

h3.top-opportunities-header Top Opportunities
  a.accent(ng-click="a.goToOpportunities($event);" ng-disabled="a.allOpportunitiesDisabled()" analytics-on="click" analytics-event="{{a.currentTopBottomAcctType.name}}" analytics-category="{{a.filtersService.model.valuesVsTrend.name}}" analytics-label="View Opportunities") See All Opportunities
  label Select a premise type followed by a retailer and/or distributor to view opportunities
