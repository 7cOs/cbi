notes
.account-header
  div(row)
    div(column='5')
      h1 Account Dashboard
    div(column='7')
      .market-overview.expanded(ng-class="{'visible': a.overviewOpen}")
        .overview
          label My Accounts
          label On- &amp; Off-Premise
        .brands
          p {{a.brandWidgetTitle}}<span ng-if="a.brandIdSelected"> - {{a.brandIdSelected}}</span>
        .market
          p {{a.selectedStore || a.filtersService.model.selected.accountTypes || a.accountTypesDefault}}
        .notes-icon
          p <a href="#" ng-click="a.openNotes(true)" analytics-on="click" analytics-event="Notes Tab"></a>
      .market-overview.clearfix
        .brands
          p {{a.brandWidgetTitle}}<span ng-if="a.brandIdSelected"> - {{a.brandIdSelected}}</span>
        .market
          p {{a.selectedStore || a.filtersService.model.selected.accountTypes || a.accountTypesDefault}}
        .notes-icon
          p <a href="#" ng-click="a.openNotes(true)" analytics-on="click" analytics-event="Notes Tab">Notes</a>

.filters.top(column='12')
  div(row)
    div.trend(column='2')
      label Trend
      md-radio-group(ng-model="a.filterModel.trend")
        md-radio-button(ng-repeat="filter in a.filtersService.model.trend" class="md-primary" ng-value="filter" aria-label="Trend") {{filter.name}}
    div(column='3')
      label Ending Time Period
      md-radio-group(ng-model="a.filterModel.endingTimePeriod")
        md-radio-button(ng-repeat="filter in a.filtersService.model.timePeriod track by $index" class="md-primary" ng-value="filter.value" aria-label="Ending Time Period" ng-click="a.updateDistributionTimePeriod(filter.value)") {{filter.name}}
    div(column='7')
      div(row).dropdown-filter
        div(column='6').dropdown
          label Depletions Time Period
          md-select(ng-model="a.filterModel.depletionsTimePeriod" md-on-open="a.openSelect(true)" md-on-close="a.openSelect(false)" aria-label="Select a depletion time period" ng-model-options="{trackBy: '$value.id'}")
            md-option(ng-repeat="filter in a.filtersService.model.depletionsTimePeriod[a.filterModel.endingTimePeriod]" aria-label="{{filter.name}}" ng-value="filter") {{filter.displayValue}}
        div(column='6').dropdown
          label Distribution Time Period
          md-select(ng-model="a.filterModel.distributionTimePeriod" md-on-open="a.openSelect(true)" md-on-close="a.openSelect(false)" aria-label="Select a distribution time period")
            md-option(ng-repeat="filter in a.filtersService.model.distributionTimePeriod[a.filterModel.endingTimePeriod]" aria-label="{{filter.name}}" ng-value="filter")
              <span>{{a.filterModel.endingTimePeriod === 'month'? filter.displayValue + ' Month' : filter.displayValue + ' Days'}}</span>

.filters(column='12')
  div(row)
    div(column='2')
      label Account Scope
      md-checkbox(ng-model="a.filtersService.model.selected.myAccountsOnly" aria-label="My Accounts" ng-click="a.apply(false)") My Accounts Only
    div(column='2')
      label Premise Type
      md-radio-group(ng-model="a.filtersService.model.selected.premiseType")
        md-radio-button(ng-repeat="p in a.filtersService.model.premises track by $index" class="md-primary" ng-value="p.value" aria-label="{{p.name}}" ng-click="a.apply(false)") {{p.name}}
    div(column='2')
      label Distributor
      inline-search(type="distributor" placeholder="Name" chosen-result="a.filtersService.model.distributor" callback="a.setFilter(result, 'distributor')")
    div(column='2')
      .tooltip-wrap
        label Store Type
          .tooltip
            img(src="../assets/img/icons/help-tooltip.svg")
            md-tooltip(md-direction="bottom")
              label Filter Set
              h3 Store Type
              p Chain = Chain retailers directly called on by CBBD National or Key Accounts teams (On and Off-Premise)
              p Independent = Retailers not directly called on by CBBDâ€™s National or Key Accounts teams
      md-checkbox(ng-model="a.filtersService.model.cbbdChainIndependent" aria-label="Independent" ng-change="a.chipsService.applyFilterArr(a.filtersService.model.selected.cbbdChain, 'Independent', 'cbbdChain'); a.apply(false)") Independent
      md-checkbox(ng-model="a.filtersService.model.cbbdChainCbbd" aria-label="CBBD Chain" ng-change="a.chipsService.applyFilterArr(a.filtersService.model.selected.cbbdChain, 'Cbbd', 'cbbdChain', 'CBBD Chain'); a.apply(false)") CBBD Chain
    div(column='4')
      label Retailer
      div(row).retailer.dropdown-filter
        div(column='4').dropdown
          md-select(ng-model="a.filtersService.model.selected.retailer" placeholder="Chain" ng-init="a.filtersService.model.selected.retailer = 'Chain'")
            md-option(ng-repeat="type in a.filtersService.model.retailer" ng-click="a.placeholderSelect(type.hintText)" aria-label="{{type.name}}" value="{{type.name}}") {{::type.name}}
        div(column='8')
          inline-search(ng-if="a.filtersService.model.selected.retailer === 'Store'" type="store" placeholder="{{a.hintTextPlaceholder}}" chosen-result="a.filtersService.model.store" show-address="true" callback="a.setFilter(result, 'store')")
          inline-search(ng-if="a.filtersService.model.selected.retailer === 'Chain'" type="chain" placeholder="{{a.hintTextPlaceholder}}" chosen-result="a.filtersService.model.chain" callback="a.setFilter(result, 'chain')")

  div(row)
    div(column='12' class='apply-filters')
      button(value='Apply Filters' type="button" class="btn-action" ng-disabled="a.disableApply" ng-click="a.chipsService.applyFilters(); a.updateBrandSnapshot()") Apply Filters
      .secondary-button-container.reset-only
        a(ng-click="a.resetFilters()").accent.reset-icon Reset

div(row)
  div.scorecard-table.scorecard-table-accounts(column='6')
    .loader-wrap.inline(ng-class="{'active': a.loadingBrandSnapshot}")
      loader
    .widget-header
      .dropdown-filter
        md-select(ng-model="a.filtersService.model.accountSelected.accountBrands" md-on-open="a.openSelect(true)" md-on-close="a.openSelect(false);" aria-label="Account Brands Filter" placeholder="Distribution (simple)")
          md-option(ng-repeat="filter in a.filters.accountBrands" ng-if="!a.removeDistOptionsBasedOnView(filter)" aria-label="{{filter.name}}" ng-value="filter") {{filter.name}}
      span.back-chevron(ng-if="a.brandSelectedIndex === 1" ng-click="a.prevTab()")
      p.brands {{a.brandWidgetTitle || 'All Brands'}}
    .widget-content
      table.depletions-table(cellspacing="0" cellpadding="0")
        thead
          tr
            th.top.title-col.brand-name-column
              p.accent.bold.left.single-line Brand / SKU
            th(colspan=2).top.dark.other-columns
              p.accent.bold Depletions
            th(colspan=2).top.other-columns
              p.accent Distribution(s) - {{a.filterModel.distributionTimePeriod.displayValue}} Days
          tr
            th
              p.accent &nbsp;
            th.dark
              p.accent {{a.filterModel.depletionsTimePeriod.displayValue}}
            th.dark
              p.accent {{a.filterModel.trend.name + '%'}}
            th
              p.accent {{a.filterModel.distributionTimePeriod.displayValue}}
            th
              p.accent {{a.filterModel.trend.name + '%'}}
        tbody
          tr
            td.column-total.title-col.left TOTAL
            //- Depletion TDs -
             Depletion value
            //- Need to be checked if this class needs to be added  ng-class="a.getClassBasedOnValue(a.displayBrandValue(a.currentTotalsObject.measures, 'depletions', 'depletionsTimePeriod'))"
            td.dark.depletions-value {{a.displayBrandValue(a.currentTotalsObject.measures, 'depletions', 'depletionsTimePeriod') | number:0 }}

            //- Depletion Trend
            td(ng-class="a.getClassBasedOnValue(a.getTrendValues(a.currentTotalsObject.measures, 'depletions', 'depletionsTimePeriod').value)") <span ng-bind="a.getTrendValues(a.currentTotalsObject.measures, 'depletions', 'depletionsTimePeriod').displayValue"></span>

            //- Velocity TDs
            //- Velocity value
            //- Need to be checked if this class needs to be added
            //- ng-class="a.getClassBasedOnValue(a.displayBrandValue(a.currentTotalsObject.measures, 'velocity', 'distributionTimePeriod'))"
            td(ng-if="a.filtersService.model.accountSelected.accountBrands.value === a.accountBrandEnum.velocity") {{a.displayBrandValue(a.currentTotalsObject.measures, 'velocity', 'distributionTimePeriod') | number:0 }}

            //- Velocity Trend
            //- For YA
            td(ng-if="a.filtersService.model.accountSelected.accountBrands.value === a.accountBrandEnum.velocity") <span class="percentage" ng-if="a.checkIfVelocityPresent(item)">{{a.displayBrandValue(a.currentTotalsObject.measures, 'velocityTrend', 'distributionTimePeriod') | number:1}} %</span><span ng-if="!a.displayBrandValue(a.currentTotalsObject.measures, 'velocityTrend', 'distributionTimePeriod')">-</span>

            //- Distributions TDs
            //- Distirbution value Simple
            //- ng-class="a.getClassBasedOnValue(a.displayBrandValue(a.currentTotalsObject.measures, 'distributionsSimple', 'distributionTimePeriod'))"
            td(ng-if="a.filtersService.model.accountSelected.accountBrands.value === a.accountBrandEnum.distirbutionSimple") {{a.displayBrandValue(a.currentTotalsObject.measures, 'distributionsSimple', 'distributionTimePeriod') | number:0 }}

            //- Distirbution value Effective
            //- ng-class="a.getClassBasedOnValue(a.displayBrandValue(a.currentTotalsObject.measures, 'distributionsEffective', 'distributionTimePeriod'))"
            td(ng-if="a.filtersService.model.accountSelected.accountBrands.value === a.accountBrandEnum.distirbutionEffective") {{a.displayBrandValue(a.currentTotalsObject.measures, 'distributionsEffective', 'distributionTimePeriod') | number:0 }}

            //- Distirbution Trend Simple
            td(ng-class="a.getClassBasedOnValue(a.getTrendValues(a.currentTotalsObject.measures, 'distributionsSimple', 'distributionTimePeriod').value)" ng-if="a.filtersService.model.accountSelected.accountBrands.value === a.accountBrandEnum.distirbutionSimple") <span ng-bind="a.getTrendValues(a.currentTotalsObject.measures, 'distributionsSimple', 'distributionTimePeriod').displayValue"></span>

            //- Distirbution Trend Effective
            td(ng-class="a.getClassBasedOnValue(a.getTrendValues(a.currentTotalsObject.measures, 'distributionsEffective', 'distributionTimePeriod').value)" ng-if="a.filtersService.model.accountSelected.accountBrands.value === a.accountBrandEnum.distirbutionEffective") <span ng-bind="a.getTrendValues(a.currentTotalsObject.measures, 'distributionsEffective', 'distributionTimePeriod').displayValue"></span>

      md-tabs(md-selected="a.brandSelectedIndex" ng-class="{'animate-disabled': a.disableAnimation}" md-dynamic-height)
        //-md-tab(ng-repeat="brand in a.userService.model.brandPerformance track by $index" label="{{brand.name}}")
        md-tab(ng-repeat="(key, data) in a.brandTabs" label="{{key}}")
          table.depletions-table.fixed-layout(cellspacing="0" cellpadding="0")
            tbody
              tr.clickable(ng-repeat="item in data | filter: {type: '!Total'} | orderBy:'name' track by $index" ng-show="a.checkForDepletionCount(item)" ng-click="a.selectItem('brands', item, a.brandTabs, $parent.$index)" ng-class="{selected: item.name === a.idSelected}")
                td.left.data-brand.title-col {{item.name}}
                //- Depletion TDs -
                 Depletion value
                //- Need to be checked if this class needs to be added  ng-class="a.getClassBasedOnValue(a.displayBrandValue(item.measures, 'depletions', 'depletionsTimePeriod'))"
                td.dark.depletions-value {{a.displayBrandValue(item.measures, 'depletions', 'depletionsTimePeriod') | number:0 }}

                //- Depletion Trend
                td(ng-class="a.getClassBasedOnValue(a.getTrendValues(item.measures, 'depletions', 'depletionsTimePeriod').value)") <span ng-bind="a.getTrendValues(item.measures, 'depletions', 'depletionsTimePeriod').displayValue"></span>

                //- Velocity TDs
                //- Velocity value
                //- Need to be checked if this class needs to be added
                //- ng-class="a.getClassBasedOnValue(a.displayBrandValue(item.measures, 'velocity', 'distributionTimePeriod'))"
                td(ng-if="a.filtersService.model.accountSelected.accountBrands.value === a.accountBrandEnum.velocity") {{a.displayBrandValue(item.measures, 'velocity', 'distributionTimePeriod') | number:0 }}

                //- Velocity Trend
                //- For YA
                td(ng-if="a.filtersService.model.accountSelected.accountBrands.value === a.accountBrandEnum.velocity") <span class="percentage" ng-if="a.checkIfVelocityPresent(item)">{{a.displayBrandValue(item.measures, 'velocityTrend', 'distributionTimePeriod') | number:1}} %</span><span ng-if="!a.displayBrandValue(item.measures, 'velocityTrend', 'distributionTimePeriod')">-</span>

                //- Distributions TDs
                //- Distirbution value Simple
                //- ng-class="a.getClassBasedOnValue(a.displayBrandValue(item.measures, 'distributionsSimple', 'distributionTimePeriod'))"
                td(ng-if="a.filtersService.model.accountSelected.accountBrands.value === a.accountBrandEnum.distirbutionSimple") {{a.displayBrandValue(item.measures, 'distributionsSimple', 'distributionTimePeriod') | number:0 }}

                //- Distirbution value Effective
                //- ng-class="a.getClassBasedOnValue(a.displayBrandValue(item.measures, 'distributionsEffective', 'distributionTimePeriod'))"
                td(ng-if="a.filtersService.model.accountSelected.accountBrands.value === a.accountBrandEnum.distirbutionEffective") {{a.displayBrandValue(item.measures, 'distributionsEffective', 'distributionTimePeriod') | number:0 }}

                //- Distirbution Trend Simple
                td(ng-class="a.getClassBasedOnValue(a.getTrendValues(item.measures, 'distributionsSimple', 'distributionTimePeriod').value)" ng-if="a.filtersService.model.accountSelected.accountBrands.value === a.accountBrandEnum.distirbutionSimple") <span ng-bind="a.getTrendValues(item.measures, 'distributionsSimple', 'distributionTimePeriod').displayValue"></span>

                //- Distirbution Trend Effective
                td(ng-class="a.getClassBasedOnValue(a.getTrendValues(item.measures, 'distributionsEffective', 'distributionTimePeriod').value)" ng-if="a.filtersService.model.accountSelected.accountBrands.value === a.accountBrandEnum.distirbutionEffective") <span ng-bind="a.getTrendValues(item.measures, 'distributionsEffective', 'distributionTimePeriod').displayValue"></span>

  div.scorecard-chart(column='6')
    .widget-header
      .dropdown-filter.narrow
        md-select(ng-model="a.filtersService.model.accountSelected.accountMarkets" md-on-open="a.openSelect(true)" md-on-close="a.openSelect(false)" aria-label="Account Markets Filter")
          md-option(ng-repeat="filter in a.filters.accountMarkets" aria-label="{{filter.name}}" value="{{filter.name}}") {{filter.name}}
      .header-selector
        md-select.market(ng-model="a.filtersService.model.selected.valuesVsTrend" md-on-open="a.openSelect(true)" md-on-close="a.openSelect(false)" placeholder="Top 10 (Values)" aria-label="Values versus Trends Filter")
          md-option(ng-repeat="filter in a.filters.valuesVsTrend" aria-label="{{filter.name}}" value="{{filter.name}}") {{filter.name}}
        md-select(ng-model="a.filtersService.model.selected.accountTypes" md-on-open="a.openSelect(true)" md-on-close="a.openSelect(false); a.updateTopBottom();" ng-change="a.setMarketTab(a.filtersService.model.selected.accountTypes)" placeholder="{{a.filtersService.model.selected.accountTypes || a.accountTypesDefault}}" aria-label="Account Type Filter")
          md-option(ng-repeat="filter in a.filters.accountTypes" aria-label="{{filter.name}}" value="{{filter.name}}") {{filter.name}}
    .widget-content.clearfix
      .chart-data
        table.fixed-layout(cellspacing="0" cellpadding="0")
          thead
            tr
              th.top.title-col.dist-label(colspan=2)
                p.accent.bold.left Distributors
                p &nbsp;
              th.top.dark.market-label
                p.accent.bold {{a.filtersService.model.accountSelected.accountMarkets}}
                p.accent.bold {{a.filtersService.model.depletionsTimeFilter.depletionsTimeFilter}}
        md-tabs(md-selected="a.marketSelectedIndex" ng-class="{'animate-disabled': a.disableAnimation}" md-autoselect)
          md-tab(ng-repeat="(key, data) in a.marketTabs" label="{{key}}")
            table.fixed-layout(cellspacing="0" cellpadding="0")
              tbody
                tr.clickable.market-value(ng-repeat="item in data" ng-class="{'store': item.address, 'selected': item.label === a.idSelected}" ng-click="a.selectItem('markets', item, a.marketTabs, $parent.$index)")
                  td.dist-label(colspan=2) {{item.title}} <span ng-if="item.storeNum" class="store-number">\#{{item.storeNum}}</span><span ng-if="item.address" class="address">{{item.address}}</span>
                  td.dark.market-label
                    span(ng-if="a.filtersService.model.accountSelected.accountMarkets === 'Depletions'") {{item.depletions | number}}
                    span(ng-if="a.filtersService.model.accountSelected.accountMarkets === 'Distribution (simple)'") {{item.distSimple}}
                    span(ng-if="a.filtersService.model.accountSelected.accountMarkets === 'Distribution (effective)'") {{item.distEffective}}
                    span(ng-if="a.filtersService.model.accountSelected.accountMarkets === 'Velocity'") {{item.velocity}}
      .chart
        table.no-top-border(cellspacing="0" cellpadding="0")
          thead
            tr
              th.top.title-col.chart-title
                p.accent.bold Trends
            tr
              th
                p.accent FYTD - vs YA%
        nvd3.nvd(options="a.chartOptions" data="a.chartData")

h3.top-opportunities-header Top Opportunities
  a.accent(ng-click="a.goToOpportunities();") See All Opportunities
list.account-dashboard-opps
